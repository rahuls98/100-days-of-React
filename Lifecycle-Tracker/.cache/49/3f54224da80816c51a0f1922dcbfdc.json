{"id":"../node_modules/linkifyjs/lib/linkify.js","dependencies":[{"name":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/package.json","includedInParent":true,"mtime":1599735144517},{"name":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/package.json","includedInParent":true,"mtime":1599735143871},{"name":"./linkify/utils/class","loc":{"line":6,"column":21},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/utils/class.js"},{"name":"./linkify/utils/options","loc":{"line":8,"column":23},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/utils/options.js"},{"name":"./linkify/core/scanner","loc":{"line":12,"column":23},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/scanner.js"},{"name":"./linkify/core/parser","loc":{"line":16,"column":22},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/parser.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;\n\nvar _class = require('./linkify/utils/class');\n\nvar _options = require('./linkify/utils/options');\n\nvar options = _interopRequireWildcard(_options);\n\nvar _scanner = require('./linkify/core/scanner');\n\nvar scanner = _interopRequireWildcard(_scanner);\n\nvar _parser = require('./linkify/core/parser');\n\nvar parser = _interopRequireWildcard(_parser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nif (!Array.isArray) {\n\tArray.isArray = function (arg) {\n\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n}\n\n/**\n\tConverts a string into tokens that represent linkable and non-linkable bits\n\t@method tokenize\n\t@param {String} str\n\t@return {Array} tokens\n*/\nvar tokenize = function tokenize(str) {\n\treturn parser.run(scanner.run(str));\n};\n\n/**\n\tReturns a list of linkable items in the given string.\n*/\nvar find = function find(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\tvar filtered = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\t\tif (token.isLink && (!type || token.type === type)) {\n\t\t\tfiltered.push(token.toObject());\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\n/**\n\tIs the given string valid linkable text of some sort\n\tNote that this does not trim the text for you.\n\n\tOptionally pass in a second `type` param, which is the type of link to test\n\tfor.\n\n\tFor example,\n\n\t\ttest(str, 'email');\n\n\tWill return `true` if str is a valid email.\n*/\nvar test = function test(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\treturn tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);\n};\n\n// Scanner and parser provide states and tokens for the lexicographic stage\n// (will be used to add additional link types)\nexports.find = find;\nexports.inherits = _class.inherits;\nexports.options = options;\nexports.parser = parser;\nexports.scanner = scanner;\nexports.test = test;\nexports.tokenize = tokenize;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"../node_modules/linkifyjs/lib/linkify.js":"'use strict';\n\nexports.__esModule = true;\nexports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;\n\nvar _class = require('./linkify/utils/class');\n\nvar _options = require('./linkify/utils/options');\n\nvar options = _interopRequireWildcard(_options);\n\nvar _scanner = require('./linkify/core/scanner');\n\nvar scanner = _interopRequireWildcard(_scanner);\n\nvar _parser = require('./linkify/core/parser');\n\nvar parser = _interopRequireWildcard(_parser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nif (!Array.isArray) {\n\tArray.isArray = function (arg) {\n\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n}\n\n/**\n\tConverts a string into tokens that represent linkable and non-linkable bits\n\t@method tokenize\n\t@param {String} str\n\t@return {Array} tokens\n*/\nvar tokenize = function tokenize(str) {\n\treturn parser.run(scanner.run(str));\n};\n\n/**\n\tReturns a list of linkable items in the given string.\n*/\nvar find = function find(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\tvar filtered = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\t\tif (token.isLink && (!type || token.type === type)) {\n\t\t\tfiltered.push(token.toObject());\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\n/**\n\tIs the given string valid linkable text of some sort\n\tNote that this does not trim the text for you.\n\n\tOptionally pass in a second `type` param, which is the type of link to test\n\tfor.\n\n\tFor example,\n\n\t\ttest(str, 'email');\n\n\tWill return `true` if str is a valid email.\n*/\nvar test = function test(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\treturn tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);\n};\n\n// Scanner and parser provide states and tokens for the lexicographic stage\n// (will be used to add additional link types)\nexports.find = find;\nexports.inherits = _class.inherits;\nexports.options = options;\nexports.parser = parser;\nexports.scanner = scanner;\nexports.test = test;\nexports.tokenize = tokenize;"},"lineCount":85}},"error":null,"hash":"97239d0c344183f8b0acdbae1ee262e9","cacheData":{"env":{}}}