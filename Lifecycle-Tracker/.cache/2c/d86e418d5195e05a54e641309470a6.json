{"id":"../node_modules/linkifyjs/lib/linkify/core/parser.js","dependencies":[{"name":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/package.json","includedInParent":true,"mtime":1599735144517},{"name":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/package.json","includedInParent":true,"mtime":1599735143871},{"name":"./state","loc":{"line":6,"column":21},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/parser.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/state.js"},{"name":"./tokens/multi","loc":{"line":8,"column":21},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/parser.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/tokens/multi.js"},{"name":"./tokens/text","loc":{"line":12,"column":20},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/parser.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/tokens/text.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _multi = require('./tokens/multi');\n\nvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\nvar _text = require('./tokens/text');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.TokenState(tokenClass);\n};\n\n// The universal starting state.\nvar S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nvar S_PROTOCOL = makeState(); // e.g., 'http:'\nvar S_MAILTO = makeState(); // 'mailto:'\nvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\nvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\nvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\nvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\nvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\nvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\nvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\nvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\nvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\nvar S_URL_OPENBRACE = makeState(); // URL followed by {\nvar S_URL_OPENBRACKET = makeState(); // URL followed by [\nvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\nvar S_URL_OPENPAREN = makeState(); // URL followed by (\nvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\nvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\nvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\nvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\nvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\nvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more tlds)\nvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\nvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\nvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\nvar S_LOCALPART = makeState(); // Local part of the email address\nvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\nvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nvar S_NL = makeState(_multi.NL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\nS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\nS_TLD_PORT.on(_text.SLASH, S_URL);\nS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n.on(_text.DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nvar run = function run(tokens) {\n\tvar len = tokens.length;\n\tvar cursor = 0;\n\tvar multis = [];\n\tvar textTokens = [];\n\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar multiLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new _multi.TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexports.State = _state.TokenState;\nexports.TOKENS = MULTI_TOKENS;\nexports.run = run;\nexports.start = S_START;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/parser.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}}],"sources":{"../node_modules/linkifyjs/lib/linkify/core/parser.js":"'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _multi = require('./tokens/multi');\n\nvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\nvar _text = require('./tokens/text');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.TokenState(tokenClass);\n};\n\n// The universal starting state.\nvar S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nvar S_PROTOCOL = makeState(); // e.g., 'http:'\nvar S_MAILTO = makeState(); // 'mailto:'\nvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\nvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\nvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\nvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\nvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\nvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\nvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\nvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\nvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\nvar S_URL_OPENBRACE = makeState(); // URL followed by {\nvar S_URL_OPENBRACKET = makeState(); // URL followed by [\nvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\nvar S_URL_OPENPAREN = makeState(); // URL followed by (\nvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\nvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\nvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\nvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\nvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\nvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more tlds)\nvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\nvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\nvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\nvar S_LOCALPART = makeState(); // Local part of the email address\nvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\nvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nvar S_NL = makeState(_multi.NL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\nS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\nS_TLD_PORT.on(_text.SLASH, S_URL);\nS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n.on(_text.DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nvar run = function run(tokens) {\n\tvar len = tokens.length;\n\tvar cursor = 0;\n\tvar multis = [];\n\tvar textTokens = [];\n\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar multiLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new _multi.TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexports.State = _state.TokenState;\nexports.TOKENS = MULTI_TOKENS;\nexports.run = run;\nexports.start = S_START;"},"lineCount":287}},"error":null,"hash":"f3360404796ed3151db789cd07267906","cacheData":{"env":{}}}