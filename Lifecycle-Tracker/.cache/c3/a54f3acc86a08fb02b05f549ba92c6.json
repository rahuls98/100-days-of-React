{"id":"../node_modules/linkifyjs/lib/linkify/core/state.js","dependencies":[{"name":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/package.json","includedInParent":true,"mtime":1599735144517},{"name":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/package.json","includedInParent":true,"mtime":1599735143871},{"name":"../utils/class","loc":{"line":6,"column":21},"parent":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/core/state.js","resolved":"/Users/rahuls98/dev/WebDev/ReactJS/Lifecycle-Tracker/node_modules/linkifyjs/lib/linkify/utils/class.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\nvar _class = require('../utils/class');\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nvar BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n \t@method constructor\n \t@param {Class} tClass Pass in the kind of token to emit if there are\n \t\tno jumps after this state and the state is accepting.\n */\n\n\t/**\n \tOn the given symbol(s), this machine should go to the given state\n \t\t@method on\n \t@param {Array|Mixed} symbol\n \t@param {BaseState} state Note that the type of this state should be the\n \t\tsame as the current instance (i.e., don't pass in a different\n \t\tsubclass)\n */\n\ton: function on(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\n\t/**\n \tGiven the next item, returns next state for that item\n \t@method next\n \t@param {Mixed} item Should be an instance of the symbols handled by\n \t\tthis particular machine.\n \t@return {State} state Returns false if no jumps are available\n */\n\tnext: function next(item) {\n\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\tvar jump = this.j[i];\n\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\tvar state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\n\t/**\n \tDoes this state accept?\n \t`true` only of `this.T` exists\n \t\t@method accepts\n \t@return {Boolean}\n */\n\taccepts: function accepts() {\n\t\treturn !!this.T;\n\t},\n\n\n\t/**\n \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n \ta class of items handled by this state machine.\n \t\tThis method should be overriden in extended classes.\n \t\t@method test\n \t@param {Mixed} item Does this item match the given symbol?\n \t@param {Mixed} symbol\n \t@return {Boolean}\n */\n\ttest: function test(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\n\t/**\n \tEmit the token for this State (just return it in this case)\n \tIf this emits a token, this instance is an accepting state\n \t@method emit\n \t@return {Class} T\n */\n\temit: function emit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t/**\n \tDoes the given character match the given character or regular\n \texpression?\n \t\t@method test\n \t@param {String} char\n \t@param {String|RegExp} charOrRegExp\n \t@return {Boolean}\n */\n\ttest: function test(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t}\n});\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\n\t/**\n  * Similar to `on`, but returns the state the results in the transition from\n  * the given item\n  * @method jump\n  * @param {Mixed} item\n  * @param {Token} [token]\n  * @return state\n  */\n\tjump: function jump(token) {\n\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\n\t/**\n \tIs the given token an instance of the given token class?\n \t\t@method test\n \t@param {TextToken} token\n \t@param {Class} tokenClass\n \t@return {Boolean}\n */\n\ttest: function test(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tvar i = 0,\n\t    len = str.length,\n\t    state = start,\n\t    newStates = [],\n\t    nextState = void 0;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) {\n\t\treturn [];\n\t} // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexports.CharacterState = CharacterState;\nexports.TokenState = TokenState;\nexports.stateify = stateify;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/linkifyjs/lib/linkify/core/state.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}}],"sources":{"../node_modules/linkifyjs/lib/linkify/core/state.js":"'use strict';\n\nexports.__esModule = true;\nexports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\nvar _class = require('../utils/class');\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nvar BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n \t@method constructor\n \t@param {Class} tClass Pass in the kind of token to emit if there are\n \t\tno jumps after this state and the state is accepting.\n */\n\n\t/**\n \tOn the given symbol(s), this machine should go to the given state\n \t\t@method on\n \t@param {Array|Mixed} symbol\n \t@param {BaseState} state Note that the type of this state should be the\n \t\tsame as the current instance (i.e., don't pass in a different\n \t\tsubclass)\n */\n\ton: function on(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\n\t/**\n \tGiven the next item, returns next state for that item\n \t@method next\n \t@param {Mixed} item Should be an instance of the symbols handled by\n \t\tthis particular machine.\n \t@return {State} state Returns false if no jumps are available\n */\n\tnext: function next(item) {\n\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\tvar jump = this.j[i];\n\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\tvar state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\n\t/**\n \tDoes this state accept?\n \t`true` only of `this.T` exists\n \t\t@method accepts\n \t@return {Boolean}\n */\n\taccepts: function accepts() {\n\t\treturn !!this.T;\n\t},\n\n\n\t/**\n \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n \ta class of items handled by this state machine.\n \t\tThis method should be overriden in extended classes.\n \t\t@method test\n \t@param {Mixed} item Does this item match the given symbol?\n \t@param {Mixed} symbol\n \t@return {Boolean}\n */\n\ttest: function test(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\n\t/**\n \tEmit the token for this State (just return it in this case)\n \tIf this emits a token, this instance is an accepting state\n \t@method emit\n \t@return {Class} T\n */\n\temit: function emit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t/**\n \tDoes the given character match the given character or regular\n \texpression?\n \t\t@method test\n \t@param {String} char\n \t@param {String|RegExp} charOrRegExp\n \t@return {Boolean}\n */\n\ttest: function test(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t}\n});\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\n\t/**\n  * Similar to `on`, but returns the state the results in the transition from\n  * the given item\n  * @method jump\n  * @param {Mixed} item\n  * @param {Token} [token]\n  * @return state\n  */\n\tjump: function jump(token) {\n\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\n\t/**\n \tIs the given token an instance of the given token class?\n \t\t@method test\n \t@param {TextToken} token\n \t@param {Class} tokenClass\n \t@return {Boolean}\n */\n\ttest: function test(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tvar i = 0,\n\t    len = str.length,\n\t    state = start,\n\t    newStates = [],\n\t    nextState = void 0;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) {\n\t\treturn [];\n\t} // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexports.CharacterState = CharacterState;\nexports.TokenState = TokenState;\nexports.stateify = stateify;"},"lineCount":241}},"error":null,"hash":"b1fa152fbf00a6abb918fec02313655e","cacheData":{"env":{}}}